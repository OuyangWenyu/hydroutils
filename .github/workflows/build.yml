on:
    push:
        branches:
            - main
            - dev
    pull_request:
        branches:
            - main
            - dev

name: build

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
                python-version: ["3.9", "3.10", "3.11", "3.12"]

        env:
            SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Set up Python ${{ matrix.python-version }}
              run: uv python install ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  uv sync --all-extras --dev

            - name: Run tests
              run: |
                  uv run pytest --cov=hydroutils --cov-report=xml --cov-report=term-missing

            - name: Upload coverage to Codecov
              if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  fail_ci_if_error: true

    lint:
        name: Code quality checks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Set up Python
              run: uv python install 3.11

            - name: Install dependencies
              run: uv sync --dev

            - name: Run ruff (linter)
              run: uv run ruff check .

            - name: Run ruff (formatter)
              run: uv run ruff format --check .

            - name: Run black check
              run: uv run black --check .

            - name: Run mypy
              run: uv run mypy hydroutils

    security:
        name: Security scan
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "latest"

            - name: Set up Python
              run: uv python install 3.11

            - name: Install dependencies
              run: uv sync --dev

            - name: Run safety check
              run: |
                  uv add --dev safety
                  uv run safety check

            - name: Run bandit security check
              run: |
                  uv add --dev bandit
                  uv run bandit -r hydroutils/
